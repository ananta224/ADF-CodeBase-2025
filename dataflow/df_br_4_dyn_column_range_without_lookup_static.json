{
	"name": "df_br_4_dyn_column_range_without_lookup_static",
	"properties": {
		"folder": {
			"name": "BR-ADF Tasks"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_mysql_ananta_adf",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_mysql_ananta_dyn",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn2"
				},
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          emp_id as integer,",
				"          fullName as string,",
				"          dept_id as integer,",
				"          dept_name as string,",
				"          position as string,",
				"          salary as integer,",
				"          hire_date as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     tableName: 'employee_pos_tb',",
				"     store: 'mysql',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> source1",
				"source1 derive(each(match(type=='string'), $$ = iif(instr($$,'^')>0,replace( replace(replace(replace(replace(toString(split($$, '^')), '[\"', '[{\"'), '\",\"', '\"},{\"'), '\"]', '\"}]'),'{\"',concat('{\"',$0,'\":\"')), '\"[{', '[{'),$$))) ~> derivedColumn2",
				"derivedColumn2 aggregate(json_unfold_tb = toString(collect(@(emp_id=emp_id,fullName=fullName,dept_id=dept_id,dept_name=dept_name,position=position,salary=salary,hire_date=hire_date)))) ~> aggregate1",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1),",
				"     preCommands: [],",
				"     postCommands: []) ~> sink1"
			]
		}
	}
}